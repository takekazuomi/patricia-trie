name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    name: テスト
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.22, 1.24]
    
    steps:
    - name: コードをチェックアウト
      uses: actions/checkout@v4
      
    - name: Go環境をセットアップ
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: 依存関係をキャッシュ
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: 依存関係をダウンロード
      run: go mod download
      
    - name: テストを実行
      run: make test
      
    - name: テストカバレッジを生成
      run: make test-coverage
      
    - name: カバレッジレポートをアップロード
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        fail_ci_if_error: false

  lint:
    name: 静的解析
    runs-on: ubuntu-latest
    
    steps:
    - name: コードをチェックアウト
      uses: actions/checkout@v4
      
    - name: Go環境をセットアップ
      uses: actions/setup-go@v4
      with:
        go-version: 1.24
        
    - name: golangci-lintを実行
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2.2.1
        args: --timeout=5m

  build:
    name: ビルド
    runs-on: ubuntu-latest
    
    steps:
    - name: コードをチェックアウト
      uses: actions/checkout@v4
      
    - name: Go環境をセットアップ
      uses: actions/setup-go@v4
      with:
        go-version: 1.24
        
    - name: ビルドを実行
      run: make build

  benchmark:
    name: ベンチマーク
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: コードをチェックアウト
      uses: actions/checkout@v4
      
    - name: Go環境をセットアップ
      uses: actions/setup-go@v4
      with:
        go-version: 1.24
        
    - name: ベンチマークを実行
      run: make benchmark